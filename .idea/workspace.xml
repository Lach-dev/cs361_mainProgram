<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d26b7be1-0697-4b84-98d7-c7b2cd114c8b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth/auth.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/encdec/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/encdec/encdec.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/encdec/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/encdec/test.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Flask Main" />
        <option value="SCSS File" />
        <option value="CSS File" />
        <option value="HTML File" />
        <option value="Dockerfile" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2jtChQMd6u9zy9E4pBCxVZl8Gu6" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultHtmlFileTemplate": "HTML File",
    "Docker.run.executor": "Run",
    "Docker.test.executor": "Run",
    "Flask server.mainProgram_cs361.executor": "Run",
    "Python tests.pytest in test.py.executor": "Run",
    "Python.test.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/11thu/PycharmProjects/mainProgram_cs361/encdec/test.py",
    "list.type.of.created.stylesheet": "CSS",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "watcher.settings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361\encryption" />
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361\auth" />
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361\mainApp" />
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361" />
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361\mainApp" />
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361\auth" />
      <recent name="C:\Users\11thu\PycharmProjects\mainProgram_cs361\static" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.run">
    <configuration name="mainProgram_cs361" type="Python.FlaskServer">
      <module name="mainProgram_cs361" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.12 (mainprogram_cs361)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="run" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="test" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="testDec" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8001" />
                <option name="hostPort" value="8001" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="encdec/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="pytest in test.py" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="mainProgram_cs361" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.12 (mainprogram_cs361)" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;C:\\Users\\11thu\\PycharmProjects\\mainProgram_cs361\\encdec\\test.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.run" />
      <item itemvalue="Docker.test" />
      <item itemvalue="Flask server.mainProgram_cs361" />
      <item itemvalue="Python tests.pytest in test.py" />
    </list>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.18034.82" />
        <option value="bundled-python-sdk-975db3bf15a3-2767605e8bc2-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.18034.82" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d26b7be1-0697-4b84-98d7-c7b2cd114c8b" name="Changes" comment="" />
      <created>1722197104311</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1722197104311</updated>
      <workItem from="1722197105672" duration="6438000" />
      <workItem from="1722218956915" duration="4775000" />
      <workItem from="1722274337007" duration="74000" />
      <workItem from="1722281200159" duration="1153000" />
      <workItem from="1722282832404" duration="8756000" />
      <workItem from="1722631234763" duration="13000" />
      <workItem from="1722880366185" duration="213000" />
      <workItem from="1723352480045" duration="662000" />
      <workItem from="1723512804490" duration="422000" />
      <workItem from="1723572828587" duration="84000" />
      <workItem from="1723573067501" duration="5128000" />
      <workItem from="1723660210210" duration="106000" />
      <workItem from="1723660331554" duration="6832000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mainprogram_cs361$pytest_in_test_py.coverage" NAME="pytest in test.py Coverage Results" MODIFIED="1723666293789" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/mainprogram_cs361$test.coverage" NAME="test Coverage Results" MODIFIED="1723666013607" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/encdec" />
    <SUITE FILE_PATH="coverage/mainprogram_cs361$mainProgram_cs361.coverage" NAME="mainProgram_cs361 Coverage Results" MODIFIED="1723578210598" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>